# Saved by TopBraid on Mon Nov 17 07:51:29 CET 2014
# baseURI: http://purl.org/rvl/

@prefix :        <http://purl.org/rvl/> .
@prefix bibo:    <http://purl.org/ontology/bibo/> .
@prefix dct:     <http://purl.org/dc/terms/> .
@prefix event:   <http://purl.org/NET/c4dm/event.owl#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rvl-docu:  <http://purl.org/rvl/docu/> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix swstatus:  <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix viso-graphic:  <http://purl.org/viso/graphic/> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

dct:description
      rdf:type owl:AnnotationProperty .

:     rdf:type owl:Ontology ;
      rdfs:label "RDFS/OWL Visualization Language (RVL)"^^xsd:string ;
      dct:creator <http://purl.org/viso/JanPolowinski> ;
# 	  for some reason it's not possible to move the ontology description to rvl-docu:
	  dct:description """RVL is a declarative language that allows to specify a mapping from RDF(S)/OWL concepts to visual means that are defined in the <a href=\"http://purl.org/viso/\">Visualisation Ontology</a> (VISO). The syntax is based on RDFS, while the semantics are given by means of SPIN rules.  

RVL was developed in the SemVis project by Jan Polowinski. More on RVL can be found in the <a href=\"https://github.com/semvis/rvl/wiki\" title=\"The RVL-Wiki on GitHub ...\">Wiki</a>.

<h3>Overview of Mapping Classes in RVL</h3>

<img src=\"http://www-st.inf.tu-dresden.de/semvis/ontologies/rvl/img/rvl_class_diagram.png\">

<h3>Overview of Datatypes used in RVL</h3>
<b>MissingSourceValueHandlingType:</b> Hide, Ignore, Missing (default), Neutral, Average
<b>MissingValueMappingHandlingType:</b> Calculate (default), Hide, Neutral, Ignore, No mapping, Average
<b>NeutralValueHandlingType:</b> Average, Style
<b>OutOfBoundHandlingType:</b> Cut (default), Clamp
<b>ScaleTransformationType:</b> Linear (default), Logarithmic

<!--<img src=\"http://www-st.inf.tu-dresden.de/semvis/ontologies/rvl/img/datatypes_rvl.png\"/>-->""" ;
      owl:imports rvl-docu: , viso-graphic: .

:Average
      rdf:type :MissingSourceValueHandlingType , :MissingValueMappingHandlingType , :NeutralValueHandlingType ;
      rdfs:label "Average"^^xsd:string .

:Calculate
      rdf:type :MissingValueMappingHandlingType ;
      rdfs:label "Calculate"^^xsd:string .

:Clamp
      rdf:type :OutOfBoundHandlingType ;
      rdfs:label "clamp"^^xsd:string .

:Cut  rdf:type :OutOfBoundHandlingType ;
      rdfs:label "cut"^^xsd:string .

:GraphicAttributeInterval
      rdf:type owl:Class ;
      rdfs:label "Graphic attribute interval"^^xsd:string ;
      rdfs:subClassOf :Interval ;
      swstatus:term_status
              "stable"^^xsd:string .

:Hide
      rdf:type :MissingSourceValueHandlingType , :MissingValueMappingHandlingType ;
      rdfs:label "Hide"^^xsd:string .

:IdentityMapping
      rdf:type owl:Class ;
      rdfs:comment "Also referred to as \"Passthrough Mapping\" in some tools."^^xsd:string ;
      rdfs:label "Identity mapping"^^xsd:string ;
      rdfs:subClassOf :PropertyMapping ;
      swstatus:term_status
              "stable"^^xsd:string .

:Ignore
      rdf:type :MissingSourceValueHandlingType , :MissingValueMappingHandlingType ;
      rdfs:label "Ignore"^^xsd:string .

:Interval
      rdf:type owl:Class ;
      rdfs:label "Interval"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:Linear
      rdf:type :ScaleTransformationType ;
      rdfs:label "linear"^^xsd:string .

:Logarithmic
      rdf:type :ScaleTransformationType ;
      rdfs:label "logarithmic"^^xsd:string .

:Mapping
      rdf:type owl:Class ;
      rdfs:label "Mapping"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:Missing
      rdf:type :MissingSourceValueHandlingType ;
      rdfs:label "Missing"^^xsd:string .

:MissingSourceValueHandlingType
      rdf:type rdfs:Class ;
      rdfs:label "Missing source value handling type"^^xsd:string ;
      rdfs:subClassOf rdfs:Datatype .

:MissingValueMappingHandlingType
      rdf:type rdfs:Class ;
      rdfs:label "Missing value mapping handling type"^^xsd:string ;
      rdfs:subClassOf rdfs:Datatype .

:Neutral
      rdf:type :MissingSourceValueHandlingType , :MissingValueMappingHandlingType ;
      rdfs:label "Neutral"^^xsd:string .

:NeutralValueHandlingType
      rdf:type rdfs:Class ;
      rdfs:label "Neutral value handling type"^^xsd:string ;
      rdfs:subClassOf rdfs:Datatype .

:NoMapping
      rdf:type :MissingValueMappingHandlingType ;
      rdfs:label "No mapping"^^xsd:string ;
      swstatus:term_status
              "unstable"^^xsd:string .

:NoPropertyValueMapping
      rdf:type owl:Class ;
      rdfs:label "No-Property-Value-Mapping"^^xsd:string ;
      rdfs:subClassOf :PropertyMapping .

:OutOfBoundHandlingType
      rdf:type rdfs:Class ;
      rdfs:label "Out of bound handling type"^^xsd:string ;
      rdfs:subClassOf rdfs:Datatype ;
      swstatus:term_status
              "stable"^^xsd:string .

:PropertyMapping
      rdf:type owl:Class ;
      rdfs:comment "When a target graphic relation is used in multiple mappings, a warning should be issued, since ambiguities become possible."^^xsd:string ;
      rdfs:label "Property Mapping"^^xsd:string ;
      rdfs:subClassOf :Mapping ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:PropertyToGraphicAttributeMapping
      rdf:type owl:Class ;
      rdfs:label "Property-to-Graphic-Attribute Mapping"^^xsd:string ;
      rdfs:subClassOf :PropertyMapping ;
      swstatus:term_status
              "stable"^^xsd:string .

:PropertyToGraphicObjToObjRelationMapping
      rdf:type owl:Class ;
      rdfs:label "Property-to-Graphic-Object-to-Object-Relation Mapping"^^xsd:string ;
      rdfs:subClassOf :PropertyMapping ;
      swstatus:term_status
              "stable"^^xsd:string .

:RemoveTransitiveHull
      rdf:type owl:Class ;
      rdfs:label "Remove transitive hull"^^xsd:string ;
      rdfs:subClassOf :Simplification ;
      swstatus:term_status
              "stable"^^xsd:string .

:ResourceMapping
      rdf:type owl:Class ;
      rdfs:label "Resource mapping"^^xsd:string ;
      rdfs:seeAlso :inheritedBy , :passedTo ;
      rdfs:subClassOf :Mapping ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:ScaleTransformationType
      rdf:type rdfs:Class ;
      rdfs:label "Interpolation value"^^xsd:string ;
      rdfs:subClassOf rdfs:Datatype .

:Simplification
      rdf:type owl:Class ;
      rdfs:label "Simplification"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:SourceValueInterval
      rdf:type owl:Class ;
      rdfs:label "Source value interval"^^xsd:string ;
      rdfs:subClassOf :Interval ;
      swstatus:term_status
              "stable"^^xsd:string .

:Style
      rdf:type :NeutralValueHandlingType ;
      rdfs:label "Style"^^xsd:string .

:SubMappingRelation
      rdf:type owl:Class ;
      rdfs:label "Sub-mapping relation"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:UnifyWithInverseAndPickOne
      rdf:type owl:Class ;
      rdfs:label "Unify with inverse and pick one"^^xsd:string ;
      rdfs:subClassOf :Simplification ;
      swstatus:term_status
              "stable"^^xsd:string .

:ValueMapping
      rdf:type owl:Class ;
      rdfs:comment "Since discrete values on the target site are distinguished and mapped to source values, only mappings to visual attributes - not to other visual relations - will typically have value mappings. In the case of graphic-object-to-object-relations, there are usually no various target values which need to be mapped explicitly. Since most are binary, there are only two - either the graphic relation exists or not. "^^xsd:string ;
      rdfs:label "Value mapping"^^xsd:string ;
      rdfs:subClassOf :Mapping ;
      swstatus:term_status
              "stable"^^xsd:string .

:disabled
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :Mapping ;
      rdfs:label "disabled"^^xsd:string ;
      rdfs:range xsd:boolean ;
      swstatus:term_status
              "stable"^^xsd:string .

:discreteStepCount
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "discrete step count"^^xsd:string ;
      rdfs:range xsd:int ;
      swstatus:term_status
              "stable"^^xsd:string .

:discreteStepSize
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "discrete step size (deprecated)"^^xsd:string ;
      rdfs:range xsd:float ;
      rdfs:seeAlso :discreteStepCount ;
      swstatus:term_status
              "unstable"^^xsd:string .

:discretize
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "discretize"^^xsd:string ;
      rdfs:range xsd:boolean ;
      swstatus:term_status
              "stable"^^xsd:string .

:drawInterpolated
      rdf:type rdf:Property ;
      rdfs:comment "This flag will cause the graphic to show source values that do not exist in the raw dataset, but have only been interpolated! Therefore, this setting has to be done with care not to suggest the impression of continuous data, when only discrete source values exist."^^xsd:string ;
      rdfs:domain :PropertyToGraphicAttributeMapping ;
      rdfs:label "draw interpolated"^^xsd:string ;
      rdfs:range xsd:boolean ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:excludeSourceValue
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Excluding a value from the mapping does not mean that a resource with this value won't show up at all in the graphic. That is the task of filtering the data to visualize. It simply means that this value does not get a visual value assigned by this mapping. Hence, the default value for the visual attribute will be chosen instead. In this case it is important to chose a default value, that is not mixed up with a value that carries meaning! So the default value has to be chosen carefully."^^xsd:string ;
      rdfs:domain :ValueMapping ;
      rdfs:label "exclude source value"^^xsd:string ;
      rdfs:range rdfs:Resource ;
      swstatus:term_status
              "stable"^^xsd:string .

:excludeTargetValue
      rdf:type owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "exclude target value"^^xsd:string ;
      rdfs:range viso-graphic:Visual_Attribute ;
      swstatus:term_status
              "stable"^^xsd:string .

:fallsBackTo
      rdf:type owl:IrreflexiveProperty , owl:ObjectProperty ;
      rdfs:comment "We decided to allow the definitions of fall-backs on the level of mappings instead of the level of visual means,  to allow for context-dependent decisions. Still, fall-backs between visual means could be defined additionally in future versions of this vocabulary."^^xsd:string ;
      rdfs:domain :Mapping ;
      rdfs:label "falls back to"^^xsd:string ;
      rdfs:range :Mapping ;
      swstatus:term_status
              "stable"^^xsd:string .

:fslSelector
      rdf:type rdfs:Datatype ;
      rdfs:comment "FSL is the selector language used in Fresnel: http://www.w3.org/2005/04/fresnel-info/fsl/"^^xsd:string ;
      rdfs:label "FSL selector"^^xsd:string ;
      rdfs:subClassOf rdfs:Literal ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:includeInLegend
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :Mapping ;
      rdfs:label "include in legend"^^xsd:string ;
      rdfs:range xsd:boolean ;
      swstatus:term_status
              "stable"^^xsd:string .

:inheritedBy
      rdf:type rdf:Property ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "inherited by"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:invertOrderOfTargetValues
      rdf:type rdf:Property ;
      rdfs:domain :ValueMapping ;
      rdfs:label "invert order of target values"^^xsd:string ;
      rdfs:range xsd:boolean ;
      swstatus:term_status
              "stable"^^xsd:string .

:invertSourceProperty
      rdf:type rdf:Property ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "invert source property"^^xsd:string ;
      rdfs:range xsd:boolean ;
      swstatus:term_status
              "stable"^^xsd:string .

:isExistentialPropertyMapping
      rdf:type rdf:Property ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "is existential property mapping"^^xsd:string ;
      rdfs:range xsd:boolean ;
      swstatus:term_status
              "unstable"^^xsd:string .

:lowerBoundExcl
      rdf:type rdf:Property ;
      rdfs:domain :Interval ;
      rdfs:label "lower bound exclusive"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:lowerBoundIncl
      rdf:type rdf:Property ;
      rdfs:domain :Interval ;
      rdfs:label "lower bound inclusive"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:mapMissingValuesTo
      rdf:type rdf:Property ;
      rdfs:comment "The range should be literals with string, int, float, boolean + discrete visual attributes"^^xsd:string ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "map missing values to"^^xsd:string ;
      rdfs:range rdfs:Resource ;
      swstatus:term_status
              "stable"^^xsd:string .

:missingSourceValue
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "missing source value"^^xsd:string ;
      rdfs:range :MissingSourceValueHandlingType ;
      swstatus:term_status
              "stable"^^xsd:string .

:missingValueMapping
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "missing value mapping"^^xsd:string ;
      rdfs:range :MissingValueMappingHandlingType ;
      swstatus:term_status
              "stable"^^xsd:string .

:neutralValue
      rdf:type rdf:Property ;
      rdfs:domain viso-graphic:GraphicRelation ;
      rdfs:label "neutral value"^^xsd:string ;
      rdfs:range rdfs:Resource ;
      swstatus:term_status
              "stable"^^xsd:string .

:objectFilter
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "object filter"^^xsd:string ;
      rdfs:range :sparqlSelector ;
      rdfs:seeAlso :sourceFilter , :subjectFilter ;
      swstatus:term_status
              "stable"^^xsd:string .

:orderSourceValuesBy
      rdf:type owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "order source values by"^^xsd:string ;
      rdfs:range rdf:Property ;
      swstatus:term_status
              "stable"^^xsd:string .

:orderTargetValuesBy
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Using order properties in order to create an order between target values is discouraged, since this could generate a non-strict order. Lists are preferred to object properties here. Also selecting datatype properties can lead to a non-strict order. In both cases a warning should be issued, when multiple values are ranked equally."^^xsd:string ;
      rdfs:domain :ValueMapping ;
      rdfs:label "order target values by"^^xsd:string ;
      rdfs:range rdf:Property ;
      swstatus:term_status
              "stable"^^xsd:string .

:passedTo
      rdf:type rdf:Property ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "passed to"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:preferredProperty
      rdf:type owl:ObjectProperty ;
      rdfs:domain :Simplification ;
      rdfs:label "preferred property"^^xsd:string ;
      rdfs:subPropertyOf :simplificationProperty ;
      swstatus:term_status
              "stable"^^xsd:string .

:propertyToSimplify
      rdf:type owl:ObjectProperty ;
      rdfs:domain :Simplification ;
      rdfs:label "property to simplify"^^xsd:string ;
      rdfs:range rdf:Property ;
      rdfs:subPropertyOf :simplificationProperty ;
      swstatus:term_status
              "stable"^^xsd:string .

:quantifySourceValuesBy
      rdf:type owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "quantify source values by"^^xsd:string ;
      rdfs:range rdf:Property ;
      swstatus:term_status
              "stable"^^xsd:string .

:quantifyTargetValuesBy
      rdf:type owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "quantify target values by"^^xsd:string ;
      rdfs:range rdf:Property ;
      swstatus:term_status
              "stable"^^xsd:string .

:scaleTransformation
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "scale transformation type"^^xsd:string ;
      rdfs:range :ScaleTransformationType ;
      swstatus:term_status
              "stable"^^xsd:string .

:similarProperty
      rdf:type owl:ObjectProperty ;
      rdfs:domain :UnifyWithInverseAndPickOne ;
      rdfs:label "similar property"^^xsd:string ;
      rdfs:subPropertyOf :simplificationProperty ;
      swstatus:term_status
              "stable"^^xsd:string .

:simplificationProperty
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Only needed as a container to sort subproperties nicely in the GUI-tree."^^xsd:string ;
      rdfs:label "simplification property"^^xsd:string .

:sourceFilter
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "<b>Difference to objectFilter:</b> ObjectFilter used with property mappings can filter on the level of property mappings - allowing different graphic realtions to be applied depending on the filter. As opposed to this, sourceFilter only allows for filtering on the level of source values and should be used when the graphic relation is not varied based on the filtering, but only the values are varied. Properties such as sourceValueSet, sourceValue and sourceValueInterval partly work as filters as well and can more easily be used for most cases. For examle, with sourceValueSet existing sets can very easily be referenced. sourceFilter covers all other more complex filtering needs."^^xsd:string ;
      rdfs:domain :ValueMapping ;
      rdfs:label "source filter"^^xsd:string ;
      rdfs:range :sparqlSelector ;
      rdfs:seeAlso :objectFilter , :sourceFilter ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:sourceProperty
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:comment "A sourceProperty always works as a basic filter, limiting the mapped statements to those where the predicate is the given sourceProperty. Note that addditional constraints on the statements to be mapped can be defined via constraining the subjects and objects (e.g. via subjectFilter)."^^xsd:string ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "source property"^^xsd:string ;
      rdfs:range rdf:Property ;
      swstatus:term_status
              "stable"^^xsd:string .

:sourceValue
      rdf:type rdf:Property ;
      rdfs:domain :ValueMapping ;
      rdfs:label "source value"^^xsd:string ;
      rdfs:range rdfs:Resource ;
      swstatus:term_status
              "stable"^^xsd:string .

:sourceValueInterval
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "source interval"^^xsd:string ;
      rdfs:range :SourceValueInterval ;
      swstatus:term_status
              "stable"^^xsd:string .

:sourceValueOrderedSet
      rdf:type owl:ObjectProperty ;
      rdfs:comment "We don't need sourceValueList, since if we allowed duplicates in a list, the mapping would not be deterministic anymore."^^xsd:string ;
      rdfs:domain :ValueMapping ;
      rdfs:label "source value ordered set"^^xsd:string ;
      rdfs:range rdf:List ;
      rdfs:subPropertyOf :sourceValueSet ;
      swstatus:term_status
              "stable"^^xsd:string .

:sourceValueSet
      rdf:type owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "source value set"^^xsd:string ;
      rdfs:range rdf:List .

:sourceValuesLabel
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "source values label"^^xsd:string ;
      rdfs:range xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:sourceValuesOutOfBounds
      rdf:type owl:DatatypeProperty ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "source values out of bounds"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:sparqlSelector
      rdf:type rdfs:Datatype ;
      rdfs:label "SPARQL selector"^^xsd:string ;
      rdfs:subClassOf rdfs:Literal , xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:subGraphic
      rdf:type rdf:Property ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "has sub-graphic"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:subMapping
      rdf:type rdf:Property ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "has sub-mapping"^^xsd:string ;
      rdfs:range :SubMappingRelation ;
      rdfs:subPropertyOf :subMappingRelationProperty ;
      swstatus:term_status
              "stable"^^xsd:string .

:subMapping-mapping
      rdf:type rdf:Property , owl:FunctionalProperty ;
      rdfs:domain :SubMappingRelation ;
      rdfs:label "sub-mapping"^^xsd:string ;
      rdfs:range :Mapping ;
      rdfs:subPropertyOf :subMappingRelationProperty ;
      swstatus:term_status
              "stable"^^xsd:string .

:subMapping-onRole
      rdf:type rdf:Property , owl:FunctionalProperty ;
      rdfs:domain :SubMappingRelation ;
      rdfs:label "on role"^^xsd:string ;
      rdfs:range viso-graphic:SyntacticRole ;
      rdfs:subPropertyOf :subMappingRelationProperty ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:subMapping-onTriplePart
      rdf:type rdf:Property ;
      rdfs:domain :SubMappingRelation ;
      rdfs:label "on triple part"^^xsd:string ;
      rdfs:subPropertyOf :subMappingRelationProperty ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:subMappingRelationProperty
      rdf:type rdf:Property ;
      rdfs:label "sub mapping relation property"^^xsd:string .

:subjectFilter
      rdf:type owl:DatatypeProperty ;
      rdfs:comment """CARDINALITY AND UNIVERSALITY:
At the moment a subjectFilter is the only way to create mappings based on cardinality or universal restrictions. E.g. we can define a mapping (via a SPARQL expression) to be applied when a Person knows at least two other persons, or when a Person knows only books (but notthing else)."""^^xsd:string ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "subject filter"^^xsd:string ;
      rdfs:range :sparqlSelector ;
      rdfs:seeAlso :objectFilter ;
      swstatus:term_status
              "stable"^^xsd:string .

:targetAttribute
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:label "target attribute"^^xsd:string ;
      rdfs:range viso-graphic:GraphicAttribute ;
      rdfs:subPropertyOf :targetGraphicRelation ;
      swstatus:term_status
              "stable"^^xsd:string .

:targetGraphicRelation
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain :PropertyMapping ;
      rdfs:label "target graphic relation (abstract)"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:targetObjToObjRelation
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain :PropertyToGraphicObjToObjRelationMapping ;
      rdfs:label "target object-to-object relation"^^xsd:string ;
      rdfs:range viso-graphic:GraphicObjectToObjectRelation ;
      rdfs:subPropertyOf :targetGraphicRelation ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:targetValue
      rdf:type rdf:Property ;
      rdfs:domain :ValueMapping ;
      rdfs:label "target value"^^xsd:string ;
      rdfs:range rdfs:Resource ;
      swstatus:term_status
              "stable"^^xsd:string .

:targetValueCycle
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:comment "Use with care - c.f. targetValueList."^^xsd:string ;
      rdfs:domain :ValueMapping ;
      rdfs:label "target value cycle"^^xsd:string ;
      rdfs:range viso-graphic:Visual_Value_List ;
      rdfs:subPropertyOf :targetValues ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:targetValueInterval
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "target value interval"^^xsd:string ;
      rdfs:range :GraphicAttributeInterval ;
      swstatus:term_status
              "stable"^^xsd:string .

:targetValueList
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:comment "Same targets for different source values are usually not wanted in visualisation. As with targetValueCycle, ambiguous mappings could be the result! However, there may be cases where using a target value multiple times is acceptable and the absolute value is clear from context (e.g. isomeres)."^^xsd:string ;
      rdfs:domain :ValueMapping ;
      rdfs:label "target value list"^^xsd:string ;
      rdfs:range viso-graphic:Visual_Value_List ;
      rdfs:subPropertyOf :targetValues ;
      swstatus:term_status
              "stable"^^xsd:string .

:targetValueOrderedSet
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "target value ordered set"^^xsd:string ;
      rdfs:range viso-graphic:Visual_Value_List ;
      rdfs:subPropertyOf :targetValues .

:targetValueSet
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain :ValueMapping ;
      rdfs:label "target value set"^^xsd:string ;
      rdfs:range viso-graphic:Visual_Value_List ;
      rdfs:subPropertyOf :targetValues ;
      swstatus:term_status
              "stable"^^xsd:string .

:targetValues
      rdf:type owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:comment """Abstract. Depending on the used subproperty, the Visual_Value_List will be interpreted as actually being only a set, ordered set, list or even a cyclic list. This approach was chosen, since we may want to use existing lists as either only a set, ignoring order, or we may want to state, that we want to use the list in a cyclic way.

"""^^xsd:string ;
      rdfs:domain :ValueMapping ;
      rdfs:label "target values (abstract)"^^xsd:string ;
      rdfs:range viso-graphic:Visual_Value_List ;
      swstatus:term_status
              "stable"^^xsd:string .

:upperBoundExcl
      rdf:type rdf:Property ;
      rdfs:domain :Interval ;
      rdfs:label "upper bound exclusive"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string , "unstable"^^xsd:string .

:upperBoundIncl
      rdf:type rdf:Property ;
      rdfs:domain :Interval ;
      rdfs:label "upper bound inclusive"^^xsd:string ;
      swstatus:term_status
              "stable"^^xsd:string .

:valueMapping
      rdf:type owl:InverseFunctionalProperty , owl:ObjectProperty ;
      rdfs:domain :PropertyToGraphicAttributeMapping ;
      rdfs:label "value mapping"^^xsd:string ;
      rdfs:range :ValueMapping ;
      swstatus:term_status
              "stable"^^xsd:string .

viso-graphic:GraphicRelation
      rdf:type owl:Class .

viso-graphic:Visual_Value_Container
      rdf:type owl:Class .
